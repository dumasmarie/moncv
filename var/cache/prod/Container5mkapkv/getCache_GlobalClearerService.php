<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'cache.global_clearer' shared service.

include_once $this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheClearer/CacheClearerInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheClearer/Psr6CacheClearer.php';

return $this->services['cache.global_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer(array('cache.app' => ${($_ = isset($this->services['cache.app']) ? $this->services['cache.app'] : $this->load(__DIR__.'/getCache_AppService.php')) && false ?: '_'}, 'cache.system' => ${($_ = isset($this->services['cache.system']) ? $this->services['cache.system'] : $this->load(__DIR__.'/getCache_SystemService.php')) && false ?: '_'}, 'cache.validator' => ${($_ = isset($this->services['cache.validator']) ? $this->services['cache.validator'] : $this->getCache_ValidatorService()) && false ?: '_'}, 'cache.serializer' => ${($_ = isset($this->services['cache.serializer']) ? $this->services['cache.serializer'] : $this->getCache_SerializerService()) && false ?: '_'}, 'cache.annotations' => ${($_ = isset($this->services['cache.annotations']) ? $this->services['cache.annotations'] : $this->load(__DIR__.'/getCache_AnnotationsService.php')) && false ?: '_'}, 'cache.property_access' => ${($_ = isset($this->services['cache.property_access']) ? $this->services['cache.property_access'] : $this->getCache_PropertyAccessService()) && false ?: '_'}, 'api_platform.cache.route_name_resolver' => ${($_ = isset($this->services['api_platform.cache.route_name_resolver']) ? $this->services['api_platform.cache.route_name_resolver'] : $this->getApiPlatform_Cache_RouteNameResolverService()) && false ?: '_'}, 'api_platform.cache.identifiers_extractor' => ${($_ = isset($this->services['api_platform.cache.identifiers_extractor']) ? $this->services['api_platform.cache.identifiers_extractor'] : $this->getApiPlatform_Cache_IdentifiersExtractorService()) && false ?: '_'}, 'api_platform.cache.subresource_operation_factory' => ${($_ = isset($this->services['api_platform.cache.subresource_operation_factory']) ? $this->services['api_platform.cache.subresource_operation_factory'] : $this->getApiPlatform_Cache_SubresourceOperationFactoryService()) && false ?: '_'}, 'api_platform.cache.metadata.resource' => ${($_ = isset($this->services['api_platform.cache.metadata.resource']) ? $this->services['api_platform.cache.metadata.resource'] : $this->getApiPlatform_Cache_Metadata_ResourceService()) && false ?: '_'}, 'api_platform.cache.metadata.property' => ${($_ = isset($this->services['api_platform.cache.metadata.property']) ? $this->services['api_platform.cache.metadata.property'] : $this->getApiPlatform_Cache_Metadata_PropertyService()) && false ?: '_'}));
